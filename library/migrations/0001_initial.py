# Generated by Django 3.0.5 on 2020-05-13 21:00

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Option',
            fields=[
                ('option_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('option_model_number', models.CharField(max_length=50, unique=True, verbose_name='model number')),
                ('slug', models.SlugField(unique=True)),
                ('option_description', models.TextField(help_text='A description of what the function of the option', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ProductFamily',
            fields=[
                ('family_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField()),
                ('family_name', models.CharField(max_length=50, unique=True)),
                ('family_description', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('model_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_number', models.CharField(max_length=25, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('model_image', models.ImageField(default='library_pics\\default.jpg', upload_to='library_pics')),
                ('model_description', models.TextField(max_length=5000)),
                ('production_start_date', models.DateField(blank=True, null=True)),
                ('production_end_date', models.DateField(blank=True, null=True)),
                ('family_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='library.ProductFamily')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_type', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product_description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='SupplyType',
            fields=[
                ('supply_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('supply_type', models.CharField(max_length=50, unique=True)),
                ('supply_type_description', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('supply_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('supply_number', models.CharField(max_length=30, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('supply_life', models.CharField(help_text='How long the supply lasts', max_length=30)),
                ('supply_content', models.CharField(help_text='what comes with supply ex: black toner', max_length=50)),
                ('supply_quantity', models.PositiveSmallIntegerField(help_text='How many of the supply item is received upon ordering')),
                ('supply_comments', models.TextField(max_length=400)),
                ('model_id', models.ManyToManyField(to='library.ProductModel')),
                ('supply_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.SupplyType')),
            ],
        ),
        migrations.AddField(
            model_name='productfamily',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='library.ProductType'),
        ),
        migrations.CreateModel(
            name='OptionType',
            fields=[
                ('type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(help_text='The type of option it is. EX: Document Feeder, Base, etc', max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('type_description', models.TextField(help_text='A brief description of the type the its functionality', max_length=1000)),
                ('model_id', models.ManyToManyField(to='library.ProductModel')),
            ],
        ),
        migrations.CreateModel(
            name='OptionBelongsToModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_standard', models.BooleanField()),
                ('product_model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='library.ProductModel')),
                ('product_option', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='library.Option')),
            ],
        ),
        migrations.AddField(
            model_name='option',
            name='model_id',
            field=models.ManyToManyField(through='library.OptionBelongsToModel', to='library.ProductModel'),
        ),
        migrations.AddField(
            model_name='option',
            name='option_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='library.OptionType'),
        ),
        migrations.AddField(
            model_name='option',
            name='parent_option',
            field=models.ManyToManyField(blank=True, to='library.Option'),
        ),
        migrations.CreateModel(
            name='Manual',
            fields=[
                ('manual_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('manual_name', models.CharField(max_length=50)),
                ('manual_type', models.CharField(choices=[('Service', 'Service'), ('Installation', 'Installation'), ('Parts', 'Parts'), ('Circuit', 'Circuit'), ('Operation', 'Operation'), ('Quick Start', 'Quick Start'), ('Software Setup', 'Software Setup')], default='Service', max_length=30)),
                ('manual_part_num', models.CharField(max_length=50, unique=True)),
                ('manual_download_link', models.URLField()),
                ('model_id', models.ManyToManyField(to='library.ProductModel')),
            ],
        ),
        migrations.CreateModel(
            name='Firmware',
            fields=[
                ('firmware_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version', models.CharField(help_text="The 'version number' of the firmware", max_length=50)),
                ('type', models.CharField(max_length=35)),
                ('description', models.CharField(max_length=500)),
                ('changes', models.TextField(max_length=5000)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('model_id', models.ManyToManyField(to='library.ProductModel')),
            ],
        ),
    ]
